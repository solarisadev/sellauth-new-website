<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    {% render_snippet "meta-tags.njk" %}

    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />
    <link href="{{ "pro.css" | assetUrl }}" rel="stylesheet"/>
    <link href="{{ "custom.css" | assetUrl }}" rel="stylesheet"/>

    <style id="theme-styles">
      :root {
        --cl-primary: {{ global.properties.theme_color  }};
        --cl-primary-hex: {{ global.properties.theme_color | hex_to_rgb }};
        --cl-primary-dark: {{ global.properties.theme_color }};
        --cl-primary-darker: {{ global.properties.theme_color }};
        --bs-body-bg: {{ global.properties.primary_background_color }};
        --bs-body-bg-rgb: {{ global.properties.primary_background_color | hex_to_rgb }};
        --bs-gray-bg: {{ global.properties.secondary_background_color }};
        --bs-border-color: {{ global.properties.primary_border_color }};
        --bs-border-secondary-color: {{ global.properties.secondary_border_color }};
        --bs-font-sans-serif: '{{ (global.properties.font if global.properties.font else 'Poppins') }}', sans-serif;
      }
    </style>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family={{ (global.properties.font if global.properties.font else 'Poppins') | replace(" ", "+") }}:wght@300;400;500;600;700&display=swap" rel="stylesheet" id="theme-font">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" rel="stylesheet" />
  </head>
  <body>
    {% if shop.background_image_url %}
      <div class="bg-image" style="background-image: url({{ shop.background_image_url }});"></div>
    {% endif %}
    
    <div class="flex-wrapper" id="app" x-data="app">
      <div>
        <header class="sticky-top">
          {% render_component "announcement" %}
          {% render_component "navbar" %}
        </header>
        {{ templateContent | safe }}
      </div>
      {% render_component "footer" %}
    </div>

    <script>
      document.addEventListener('alpine:init', () => {
        Alpine.data('app', () => ({
          appCart: {
            items: [],
            updateLocalStorage: function () {
              localStorage.setItem('cart', JSON.stringify(this.items));
            },
            set: function (items) {
              this.items = items;

              this.updateLocalStorage();
            },
            add: function (productId, variantId, quantity) {
              const item = this.items.find((item) => item.variantId === variantId);

              if (item) {
                item.quantity += quantity;
              } else {
                this.items.push({ productId, variantId, quantity });
              }

              this.updateLocalStorage();
            },
            remove: function (variantId) {
              this.items = this.items.filter((item) => item.variantId !== variantId);

              this.updateLocalStorage();
            },
            editQuantity: function (variantId, quantity) {
              const item = this.items.find((item) => item.variantId === variantId);
              item.quantity = quantity;

              this.updateLocalStorage();
            },
            get countWithQuantities() {
              return this.items.reduce((acc, item) => acc + item.quantity, 0);
            },
            init: function () {
              if (localStorage.getItem('cart')) {
                try {
                  this.items = JSON.parse(localStorage.getItem('cart'));
                  if (!Array.isArray(this.items)) {
                    this.items = [];
                  }
                } catch (error) {
                  console.error('Error parsing cart from local storage', error);
                  this.items = [];
                }
              }
            }
          },

          init: function () {
            this.appCart.init();
          }
        }));
      });
    </script>

    {% if isBuilder %}
      {% render_snippet "script-builder.njk" %}
    {% endif %}

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/alpinejs@3.13.2/dist/cdn.min.js"
      integrity="sha256-MAnclv071ggEnpQbfWW6weXXKd5wErU2fZ6yuDYvdPE="
      crossorigin="anonymous"
    ></script>
    <script 
      src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"
      crossorigin="anonymous"
    ></script>

    {% if global.properties.snow %}
      <script src="/assets/js/snow.js"></script>
    {% endif %}

    {% render_snippet "script-integrations.njk" %}
  </body>
</html>